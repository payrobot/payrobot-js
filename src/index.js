/**
 * Payrobot
 * # Introduction Accept, store, send or forward Bitcoin, Litecoin and Bitcoin Cash for your website or app and protect your privacy.  Supported crytocurrencies:   * BTC Bitcoin   * LTC Litecoin   * BCH Bitcoin Cash   ## Benefits    * **Anonymous** No personal details are required and transactions are mixed among all payments. You can forward your payments so as soon payrobot.io receives it forwards it to another address under your control.      * **No Registration** No registration, sign-up, application or form required to use payrobot.io      * **Easy Integration** Integrate your web / app through our simple RESTful API, you can accept payments with just one line of code!      * **Instant Payment Notification** Our servers notify your web / app the status of your payments. No polling, daemons or cronjobs required on your side!      * **Secure** Payrobot.io works with SSL and bank-level security protocols. Your transactions are safe!   ## Features **Payment Forward** Generate one-time addresses to recieve payments. Payrobot will notify your web /app through callbacks (webhooks) the status of the payment. As soon as it's confirmed the payment is forwarded to your desired address.  **Wallet** Receive, send payments and store your coins in a secure, private and anonymous wallet. All events are notified to your web / app through callbacks (webhooks). You can generate wallets with just one line of code without registration or further information  ## Fees **Only 0.90% per inbound transaction** (receive payments), NO HIDDEN FEES. All outbound transactions (send funds) are totally free.  Minimum fees applies, therefore the largest amount is going to be considered as fee either: `(inboundAmount*feePct)` or `the minimum fee`  **Inbound Fees (Receive payments)**    - `Bitcoin` 0.90% *(Minimum fee 0.00005 BTC)*   - `Litecoin` 0.90% *(Minimum fee 0.0005 LTC)*   - `Bitcoin Cash` 0.90% *(Minimum fee 0.0005 BCH)*     **Outbound Fees (Send funds)**    - `Bitcoin` 0.00%   - `Litecoin` 0.00%   - `Bitcoin Cash` 0.00%   ## Rate Limit To guarantee the good performance of the service and its fair use. The API is **limited to receiving 120 requests per minute per IP**, which is sufficient for most use cases.  Payrobot.io is asynchronous in most API methods to communicate with your application through callbacks (webhooks), thus reducing unnecessary calls to the service.  **If the limit is exceeded, the IP will be banned for 1 minute.**  If you require an upper limit for your application, do not hesitate to contact us  ## Considerations    * Amounts in responses are expresed as `strings`      * Wallets are not multi-currency, you have to create a different wallet per cryptocurrency (You can't store Litecoin in a Bitcoin wallet and vice-versa)      * Payment forwarding has to be of the same type of currency (You can't forward a Bitcoin Cash payment to a Bitcoin address and vice-versa)    
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@payrobot.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddressDetail from './model/AddressDetail';
import CryptoCurrency from './model/CryptoCurrency';
import ErrorResponse from './model/ErrorResponse';
import PaymentRequest from './model/PaymentRequest';
import Wallet from './model/Wallet';
import WalletCreationInfo from './model/WalletCreationInfo';
import WalletHistory from './model/WalletHistory';
import WalletSendRequest from './model/WalletSendRequest';
import WalletTransaction from './model/WalletTransaction';
import PaymentApi from './api/PaymentApi';
import WalletApi from './api/WalletApi';


/**
* _IntroductionAccept_store_send_or_forward_Bitcoin_Litecoin_and_Bitcoin_Cash_for_your_website_or_app_and_protect_your_privacy_Supported_crytocurrencies___BTC_Bitcoin___LTC_Litecoin___BCH_Bitcoin_Cash_Benefits___Anonymous_No_personal_details_are_required_and_transactions_are_mixed_among_all_payments__You_can_forward_your_payments_so_as_soon_payrobot_io_receives_it_forwards_it_to_another_address_under_your_control______No_Registration_No_registration_sign_up_application_or_form_required_to_use_payrobot_io_____Easy_Integration_Integrate_your_web___app_through_our_simple_RESTful_API_you_can_accept_payments_with_just_one_line_of_code_____Instant_Payment_Notification_Our_servers_notify_your_web___app_the_status_of_your_payments__No_polling_daemons_or_cronjobs_required_on_your_side_____Secure_Payrobot_io_works_with_SSL_and_bank_level_security_protocols__Your_transactions_are_safe_FeaturesPayment_ForwardGenerate_one_time_addresses_to_recieve_payments__Payrobot_will_notify_your_web__app_through_callbacks__webhooks_the_status_of_the_payment__As_soon_as_its_confirmed_the_payment_is_forwarded_to_your_desired_address_WalletReceive_send_payments_and_store_your_coins_in_a_secure_private_and_anonymous_wallet__All_events_are_notified_to_your_web___app_through_callbacks__webhooks__You_can_generate_wallets_with_just_one_line_of_code_without_registration_or_further_information_FeesOnly_0_90_per_inbound_transaction__receive_payments_NO_HIDDEN_FEES__All_outbound_transactions__send_funds_are_totally_free_Minimum_fees_applies_therefore_the_largest_amount_is_going_to_be_considered_as_fee_either__inboundAmountfeePct_or_the_minimum_feeInbound_Fees__Receive_payments____Bitcoin_0_90__Minimum_fee_0_00005_BTC____Litecoin_0_90__Minimum_fee_0_0005_LTC____Bitcoin_Cash_0_90__Minimum_fee_0_0005_BCH__Outbound_Fees__Send_funds____Bitcoin_0_00____Litecoin_0_00____Bitcoin_Cash_0_00_Rate_LimitTo_guarantee_the_good_performance_of_the_service_and_its_fair_use__The_API_is_limited_to_receiving_120_requests_per_minute_per_IP_which_is_sufficient_for_most_use_cases_Payrobot_io_is_asynchronous_in_most_API_methods_to_communicate_with_your_application_through_callbacks__webhooks_thus_reducing_unnecessary_calls_to_the_service_If_the_limit_is_exceeded_the_IP_will_be_banned_for_1_minute_If_you_require_an_upper_limit_for_your_application_do_not_hesitate_to_contact_us_Considerations___Amounts_in_responses_are_expresed_as_strings_____Wallets_are_not_multi_currency_you_have_to_create_a_different_wallet_per_cryptocurrency__You_cant_store_Litecoin_in_a_Bitcoin_wallet_and_vice_versa_____Payment_forwarding_has_to_be_of_the_same_type_of_currency__You_cant_forward_a_Bitcoin_Cash_payment_to_a_Bitcoin_address_and_vice_versa__.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Payrobot = require('index'); // See note below*.
* var xxxSvc = new Payrobot.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Payrobot.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Payrobot.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Payrobot.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddressDetail model constructor.
     * @property {module:model/AddressDetail}
     */
    AddressDetail,

    /**
     * The CryptoCurrency model constructor.
     * @property {module:model/CryptoCurrency}
     */
    CryptoCurrency,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The PaymentRequest model constructor.
     * @property {module:model/PaymentRequest}
     */
    PaymentRequest,

    /**
     * The Wallet model constructor.
     * @property {module:model/Wallet}
     */
    Wallet,

    /**
     * The WalletCreationInfo model constructor.
     * @property {module:model/WalletCreationInfo}
     */
    WalletCreationInfo,

    /**
     * The WalletHistory model constructor.
     * @property {module:model/WalletHistory}
     */
    WalletHistory,

    /**
     * The WalletSendRequest model constructor.
     * @property {module:model/WalletSendRequest}
     */
    WalletSendRequest,

    /**
     * The WalletTransaction model constructor.
     * @property {module:model/WalletTransaction}
     */
    WalletTransaction,

    /**
    * The PaymentApi service constructor.
    * @property {module:api/PaymentApi}
    */
    PaymentApi,

    /**
    * The WalletApi service constructor.
    * @property {module:api/WalletApi}
    */
    WalletApi
};
